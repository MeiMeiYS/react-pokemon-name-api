{"version":3,"sources":["PokemonList.js","Pagination.js","App.js","index.js"],"names":["PokemonList","pokemon","map","p","Pagination","goToNextPage","goToPrevPage","onClick","App","useState","setPokemon","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","loading","setLoading","useEffect","cancel","axios","get","cancelToken","CancelToken","c","then","res","data","next","previous","results","name","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAEe,SAASA,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QAClC,OACI,8BACKA,EAAQC,KAAI,SAAAC,GAAC,OACV,8BAAcA,GAAJA,Q,oBCJX,SAASC,EAAT,GAAqD,IAA/BC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,aAC/C,OACI,gCACKA,GAAgB,wBAAQC,QAASD,EAAjB,sBAChBD,GAAgB,wBAAQE,QAASF,EAAjB,qBC4CdG,MA3Cf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOR,EAAP,KAAgBS,EAAhB,KACA,EAA4CD,mBAAS,qCAArD,mBAAOE,EAAP,KAAuBC,EAAvB,KACA,EAAsCH,qBAAtC,mBAAOI,EAAP,KAAoBC,EAApB,KACA,EAAsCL,qBAAtC,mBAAOM,EAAP,KAAoBC,EAApB,KACA,EAA8BP,oBAAS,GAAvC,mBAAOQ,EAAP,KAAgBC,EAAhB,KA0BA,OAxBAC,qBAAU,WAER,IAAIC,EAUJ,OAXAF,GAAW,GAEXG,IAAMC,IAAIX,EAAgB,CACxBY,YAAa,IAAIF,IAAMG,aAAY,SAAAC,GAAC,OAAIL,EAASK,OAElDC,MAAK,SAAAC,GACJT,GAAW,GACXJ,EAAea,EAAIC,KAAKC,MACxBb,EAAeW,EAAIC,KAAKE,UACxBpB,EAAWiB,EAAIC,KAAKG,QAAQ7B,KAAI,SAAAC,GAAC,OAAIA,EAAE6B,YAElC,kBAAMZ,OACZ,CAACT,IAWAM,EAAgB,aAGlB,sBAAKgB,UAAU,MAAf,UACE,cAACjC,EAAD,CAAaC,QAASA,IACtB,cAACG,EAAD,CACEC,aAAeQ,EAfrB,WACED,EAAkBC,IAc8B,KAC5CP,aAAeS,EAZrB,WACEH,EAAkBG,IAW8B,WCxCpDmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b8a99915.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function PokemonList({ pokemon }) {\r\n    return (\r\n        <div>\r\n            {pokemon.map(p => (\r\n                <div key={p}>{p}</div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Pagination({ goToNextPage, goToPrevPage }) {\r\n    return (\r\n        <div>\r\n            {goToPrevPage && <button onClick={goToPrevPage}>Previous</button>}\r\n            {goToNextPage && <button onClick={goToNextPage}>Next</button>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport PokemonList from \"./PokemonList\";\nimport axios from 'axios';\nimport Pagination from \"./Pagination\";\n\n\n\nfunction App() {\n  const [pokemon, setPokemon] = useState([]);\n  const [currentPageUrl, setCurrentPageUrl] = useState('https://pokeapi.co/api/v2/pokemon');\n  const [nextPageUrl, setNextPageUrl] = useState();\n  const [prevPageUrl, setPrevPageUrl] = useState();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true)\n    let cancel;\n    axios.get(currentPageUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    })\n    .then(res => {\n      setLoading(false)\n      setNextPageUrl(res.data.next)\n      setPrevPageUrl(res.data.previous)\n      setPokemon(res.data.results.map(p => p.name))\n    })\n    return () => cancel()\n  }, [currentPageUrl])\n  \n  function goToNextPage() {\n    setCurrentPageUrl(nextPageUrl)\n  }\n\n  function goToPrevPage() {\n    setCurrentPageUrl(prevPageUrl)\n  }\n\n\n  if (loading) return \"Loading...\"\n\n  return (\n    <div className=\"App\">\n      <PokemonList pokemon={pokemon} />\n      <Pagination \n        goToNextPage={ nextPageUrl ? goToNextPage : null } \n        goToPrevPage={ prevPageUrl ? goToPrevPage : null } />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}